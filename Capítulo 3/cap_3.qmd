---
title: "Exercícios - Capítulo 3"
format: html
editor: visual
---

O presente documento traz a relação de exercícios desenvolvidos para a disciplina de Métodos de Análise Multivariada do Programa de Pós-Graduação em Administração da UnB.

**Aluno: Daniel do Prado Pagotto**

Carregando os pacotes necessários. O pacote `HSAUR2` especificamente tem muitas das bases usadas nos exercícios.

```{r}
#| warning: false

library(tidyverse)
library(HSAUR2)
library(psych)
library(factoextra)

```

# Exercício 3.1

*Construct the scatterplot of the heptathlon data showing the contours of the estimated bivariate density function on each panel. Is this graphic more useful than the unenhanced scatterplot matrix?*

Primeiro vamos acessar os dados pré-carregados no pacote `HSAUR2`.

```{r}

heptathlon <- HSAUR2::heptathlon

```


Agora vamos criar o scatterplot

```{r}

plot31 <- function(a, b){
  p <- heptathlon %>% 
      ggplot(aes(x = a, y = b, label = rownames(heptathlon))) + 
      geom_point() + 
      geom_label() 

  ggMarginal(p, type = "densigram")
}

plot31(a = heptathlon$hurdles, b = heptathlon$highjump)
```

Outra alternativa é a função `scatterHist` do pacote `psych`.

```{r}

scatterHist(x = heptathlon$hurdles, y = heptathlon$highjump)

```
Vamos plotar as demais variáveis: 

*Hurdles x Shot*

```{r}

plot31(a = heptathlon$hurdles, b = heptathlon$shot)

```


```{r}

scatterHist(x = heptathlon$hurdles, y = heptathlon$shot)

```
*Hurdles x Run 200m*

```{r}

plot31(a = heptathlon$hurdles, b = heptathlon$run200m)

```


```{r}

scatterHist(x = heptathlon$hurdles, y = heptathlon$run200m)

```

*Hurdles x Longjump*

```{r}

plot31(a = heptathlon$hurdles, b = heptathlon$longjump)

```


```{r}

scatterHist(x = heptathlon$hurdles, y = heptathlon$longjump)

```

*Hurdles X Javelin* 

```{r}

plot31(a = heptathlon$hurdles, b = heptathlon$javelin)

```


```{r}

scatterHist(x = heptathlon$hurdles, y = heptathlon$javelin)

```

*Hurdles X Run 800m*

```{r}

plot31(a = heptathlon$hurdles, b = heptathlon$run800m)

```


```{r}

scatterHist(x = heptathlon$hurdles, y = heptathlon$run800m)

```

*Highjump X Shot*

```{r}

plot31(a = heptathlon$highjump, b = heptathlon$shot)

```


```{r}

scatterHist(x = heptathlon$highjump, y = heptathlon$shot)

```

*Highjump X Run 200m* 

```{r}

plot31(a = heptathlon$highjump, b = heptathlon$run200m)

```


```{r}

scatterHist(x = heptathlon$highjump, y = heptathlon$run200m)

```

*Highjump X Longjump*

```{r}

plot31(a = heptathlon$highjump, b = heptathlon$longjump)

```


```{r}

scatterHist(x = heptathlon$highjump, y = heptathlon$longjump)

```

*Highjump X Javelin*

```{r}

plot31(a = heptathlon$highjump, b = heptathlon$javelin)

```


```{r}

scatterHist(x = heptathlon$highjump, y = heptathlon$javelin)

```

*Highjump X Run 800m*

```{r}

plot31(a = heptathlon$highjump, b = heptathlon$run800m)

```


```{r}

scatterHist(x = heptathlon$highjump, y = heptathlon$run800m)

```

*Shot X Run 200m*

```{r}

plot31(a = heptathlon$shot, b = heptathlon$run200m)

```


```{r}

scatterHist(x = heptathlon$shot, y = heptathlon$run200m)

```

*Shot X Longjump*

```{r}

plot31(a = heptathlon$shot, b = heptathlon$longjump)

```


```{r}

scatterHist(x = heptathlon$shot, y = heptathlon$longjump)

```

*Shot X Javelin*

```{r}

plot31(a = heptathlon$shot, b = heptathlon$javelin)


```


```{r}

scatterHist(x = heptathlon$shot, y = heptathlon$javelin)


```

*Shot X Run 800m*

```{r}

plot31(a = heptathlon$shot, b = heptathlon$javelin)

```


```{r}

scatterHist(x = heptathlon$shot, y = heptathlon$javelin)

```

*Run 200m X Longjump*

```{r}

plot31(a = heptathlon$run200m, b = heptathlon$longjump)

```


```{r}

scatterHist(x = heptathlon$run200m, y = heptathlon$longjump)

```

*Run 200m X Javelin* 

```{r}

plot31(a = heptathlon$run200m, b = heptathlon$longjump)

```


```{r}

scatterHist(x = heptathlon$run200m, y = heptathlon$longjump)

```

*Run 200m X Run 800m*

```{r}

plot31(a = heptathlon$run200m, b = heptathlon$run800m)

```


```{r}

scatterHist(x = heptathlon$run200m, y = heptathlon$run800m)

```

*Longjump X Javelin* 

```{r}

plot31(a = heptathlon$longjump, b = heptathlon$javelin)

```


```{r}

scatterHist(x = heptathlon$longjump, y = heptathlon$javelin)

```

*Longjump X Run 800m* 

```{r}

plot31(a = heptathlon$longjump, b = heptathlon$run800m)

```


```{r}

scatterHist(x = heptathlon$longjump, y = heptathlon$run800m)

```

*Javelin X Run 800m* 

```{r}

plot31(a = heptathlon$javelin, b = heptathlon$run800m)

```


```{r}

scatterHist(x = heptathlon$javelin, y = heptathlon$run800m)

```

Pelos gráficos fica bem evidente o quanto que a competidora Launa (PNG) representa um outlier. 

# Exercício 3.2

*Construct a diagram that shows the SO2 variable in the air pollution data plotted against each of the six explanatory variables, and in each of the scatterplots show the fitted linear regression and a fitted locally weighted regression. Does this diagram help in deciding on the most appropriate model for determining the variables most predictive of sulphur dioxide levels?*

```{r}

USairpollution <- HSAUR2::USairpollution

```

Vamos plotar cada par de variáveis, por meio da função a seguir. 

```{r}

grafico <- function(x, y){
  USairpollution %>% 
    ggplot(aes(x = x, y = SO2)) + geom_point() +
    geom_smooth(method = 'lm', se = FALSE) + theme_minimal() + xlab(y)
}

```

*SO2 e Temp* 

```{r}

grafico(temp, y = "temp") + ggtitle("SO2 e Temp")

```

*SO2 e Manu*

```{r}

grafico(manu, y = "manu") + ggtitle("SO2 e Manu")

```

*SO2 e Popul*

```{r}

grafico(popul, y = "Popul") + ggtitle("SO2 e Popul")

```

*SO2 e Wind*

```{r}

grafico(wind, y = "Wind") + ggtitle("SO2 e Wind")

```

*SO2 e Precip* 

```{r}

grafico(precip, y = "Precip") + ggtitle("SO2 e Precip")

```

*SO2 e Predays*

```{r}

grafico(predays, y = "Predays") + ggtitle("SO2 e Predays")

```

Sem haver qualquer tratamento de outliers, observa-se que algumas variáveis possuem maior ajuste à reta de regressão, sendo elas: temp, manu, popul, predays. 

# Exercício 3.3. 

*Find the principal components of the following correlation matrix given by MacDonnell (1902) from measurements of seven physical characteristics in each of 3000 convicted criminals:*

Primeiro, vamos armazenar a matriz de correlação no objeto `cor_mat`. 

```{r}

cor_mat <- matrix(c(1, 0.736, 0.800, 0.661, 0.345, 0.183, 0.340,
                    0.402, 1, 0.797, 0.759, 0.363, 0.206, 0.339,
                    0.396, 0.618, 1, 0.846, 0.289, 0.135, 0.305,
                    0.301, 0.150, 0.321, 1, 0.321, 0.150, 0.301,
                    0.305, 0.135, 0.289, 0.846, 1, 0.618, 0.396,
                    0.339, 0.206, 0.363, 0.759, 0.797, 1, 0.402,
                    0.340, 0.183, 0.345, 0.661, 0.800, 0.763, 1),
                  nrow = 7, ncol = 7, byrow = TRUE)

rownames(cor_mat) <- c("head_length","head_breadth","face_breadth",
                       "left_finger_length","left_forearm_length",
                       "left_foot_length","height")

```

Agora vamos rodar a análise de componentes principais

```{r}

pca_33 <- princomp(cor_mat, cor = FALSE)


summary(pca_33)

factoextra::fviz_eig(pca_33)

```

